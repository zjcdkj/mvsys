"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/transcribe";
exports.ids = ["pages/api/transcribe"];
exports.modules = {

/***/ "@ffmpeg-installer/ffmpeg":
/*!*******************************************!*\
  !*** external "@ffmpeg-installer/ffmpeg" ***!
  \*******************************************/
/***/ ((module) => {

module.exports = require("@ffmpeg-installer/ffmpeg");

/***/ }),

/***/ "@ffprobe-installer/ffprobe":
/*!*********************************************!*\
  !*** external "@ffprobe-installer/ffprobe" ***!
  \*********************************************/
/***/ ((module) => {

module.exports = require("@ffprobe-installer/ffprobe");

/***/ }),

/***/ "fluent-ffmpeg":
/*!********************************!*\
  !*** external "fluent-ffmpeg" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("fluent-ffmpeg");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./pages/api/transcribe.ts":
/*!*********************************!*\
  !*** ./pages/api/transcribe.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_videoProcessor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/videoProcessor */ \"(api)/./utils/videoProcessor.ts\");\n/* harmony import */ var _utils_database__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/database */ \"(api)/./utils/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_videoProcessor__WEBPACK_IMPORTED_MODULE_0__]);\n_utils_videoProcessor__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        const { filename } = req.body;\n        if (!filename) {\n            return res.status(400).json({\n                error: \"Filename is required\"\n            });\n        }\n        try {\n            const { db } = await (0,_utils_database__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n            const collection = db.collection(\"audio_files\");\n            // 更新转录状态为 \"transcribing\"\n            await collection.updateOne({\n                name: filename\n            }, {\n                $set: {\n                    transcriptionStatus: \"transcribing\"\n                }\n            });\n            const transcription = await (0,_utils_videoProcessor__WEBPACK_IMPORTED_MODULE_0__.convertSpeechToText)(filename);\n            // 更新转录状态为 \"transcribed\" 并保存转录文本\n            await collection.updateOne({\n                name: filename\n            }, {\n                $set: {\n                    transcriptionStatus: \"transcribed\",\n                    transcription: transcription\n                }\n            });\n            res.status(200).json({\n                success: true,\n                message: \"Transcription completed successfully\"\n            });\n        } catch (error) {\n            console.error(\"Error in transcription:\", error);\n            res.status(500).json({\n                error: \"Error during transcription process\",\n                details: error.message\n            });\n        }\n    } else {\n        res.setHeader(\"Allow\", [\n            \"POST\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdHJhbnNjcmliZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDaUU7QUFDUjtBQUUxQyxlQUFlRSxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJRCxJQUFJRSxNQUFNLEtBQUssUUFBUTtRQUN6QixNQUFNLEVBQUVDLFFBQVEsRUFBRSxHQUFHSCxJQUFJSSxJQUFJO1FBRTdCLElBQUksQ0FBQ0QsVUFBVTtZQUNiLE9BQU9GLElBQUlJLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLE9BQU87WUFBdUI7UUFDOUQ7UUFFQSxJQUFJO1lBQ0YsTUFBTSxFQUFFQyxFQUFFLEVBQUUsR0FBRyxNQUFNVixrRUFBaUJBO1lBQ3RDLE1BQU1XLGFBQWFELEdBQUdDLFVBQVUsQ0FBQztZQUVqQyx5QkFBeUI7WUFDekIsTUFBTUEsV0FBV0MsU0FBUyxDQUFDO2dCQUFFQyxNQUFNUjtZQUFTLEdBQUc7Z0JBQUVTLE1BQU07b0JBQUVDLHFCQUFxQjtnQkFBZTtZQUFFO1lBRS9GLE1BQU1DLGdCQUFnQixNQUFNakIsMEVBQW1CQSxDQUFDTTtZQUVoRCxnQ0FBZ0M7WUFDaEMsTUFBTU0sV0FBV0MsU0FBUyxDQUN4QjtnQkFBRUMsTUFBTVI7WUFBUyxHQUNqQjtnQkFBRVMsTUFBTTtvQkFBRUMscUJBQXFCO29CQUFlQyxlQUFlQTtnQkFBYztZQUFFO1lBRy9FYixJQUFJSSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO2dCQUFFUyxTQUFTO2dCQUFNQyxTQUFTO1lBQXVDO1FBQ3hGLEVBQUUsT0FBT1QsT0FBTztZQUNkVSxRQUFRVixLQUFLLENBQUMsMkJBQTJCQTtZQUN6Q04sSUFBSUksTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFBRUMsT0FBTztnQkFBc0NXLFNBQVNYLE1BQU1TLE9BQU87WUFBQztRQUM3RjtJQUNGLE9BQU87UUFDTGYsSUFBSWtCLFNBQVMsQ0FBQyxTQUFTO1lBQUM7U0FBTztRQUMvQmxCLElBQUlJLE1BQU0sQ0FBQyxLQUFLZSxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUVwQixJQUFJRSxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQ3hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aWRlby1hbmFseXNpcy1zeXN0ZW0vLi9wYWdlcy9hcGkvdHJhbnNjcmliZS50cz81MmUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IGNvbnZlcnRTcGVlY2hUb1RleHQgfSBmcm9tICcuLi8uLi91dGlscy92aWRlb1Byb2Nlc3Nvcic7XG5pbXBvcnQgeyBjb25uZWN0VG9EYXRhYmFzZSB9IGZyb20gJy4uLy4uL3V0aWxzL2RhdGFiYXNlJztcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XG4gICAgY29uc3QgeyBmaWxlbmFtZSB9ID0gcmVxLmJvZHk7XG5cbiAgICBpZiAoIWZpbGVuYW1lKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBlcnJvcjogJ0ZpbGVuYW1lIGlzIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgeyBkYiB9ID0gYXdhaXQgY29ubmVjdFRvRGF0YWJhc2UoKTtcbiAgICAgIGNvbnN0IGNvbGxlY3Rpb24gPSBkYi5jb2xsZWN0aW9uKCdhdWRpb19maWxlcycpO1xuXG4gICAgICAvLyDmm7TmlrDovazlvZXnirbmgIHkuLogXCJ0cmFuc2NyaWJpbmdcIlxuICAgICAgYXdhaXQgY29sbGVjdGlvbi51cGRhdGVPbmUoeyBuYW1lOiBmaWxlbmFtZSB9LCB7ICRzZXQ6IHsgdHJhbnNjcmlwdGlvblN0YXR1czogJ3RyYW5zY3JpYmluZycgfSB9KTtcblxuICAgICAgY29uc3QgdHJhbnNjcmlwdGlvbiA9IGF3YWl0IGNvbnZlcnRTcGVlY2hUb1RleHQoZmlsZW5hbWUpO1xuXG4gICAgICAvLyDmm7TmlrDovazlvZXnirbmgIHkuLogXCJ0cmFuc2NyaWJlZFwiIOW5tuS/neWtmOi9rOW9leaWh+acrFxuICAgICAgYXdhaXQgY29sbGVjdGlvbi51cGRhdGVPbmUoXG4gICAgICAgIHsgbmFtZTogZmlsZW5hbWUgfSxcbiAgICAgICAgeyAkc2V0OiB7IHRyYW5zY3JpcHRpb25TdGF0dXM6ICd0cmFuc2NyaWJlZCcsIHRyYW5zY3JpcHRpb246IHRyYW5zY3JpcHRpb24gfSB9XG4gICAgICApO1xuXG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IHN1Y2Nlc3M6IHRydWUsIG1lc3NhZ2U6ICdUcmFuc2NyaXB0aW9uIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHknIH0pO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbiB0cmFuc2NyaXB0aW9uOicsIGVycm9yKTtcbiAgICAgIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgZXJyb3I6ICdFcnJvciBkdXJpbmcgdHJhbnNjcmlwdGlvbiBwcm9jZXNzJywgZGV0YWlsczogZXJyb3IubWVzc2FnZSB9KTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmVzLnNldEhlYWRlcignQWxsb3cnLCBbJ1BPU1QnXSk7XG4gICAgcmVzLnN0YXR1cyg0MDUpLmVuZChgTWV0aG9kICR7cmVxLm1ldGhvZH0gTm90IEFsbG93ZWRgKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbImNvbnZlcnRTcGVlY2hUb1RleHQiLCJjb25uZWN0VG9EYXRhYmFzZSIsImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJtZXRob2QiLCJmaWxlbmFtZSIsImJvZHkiLCJzdGF0dXMiLCJqc29uIiwiZXJyb3IiLCJkYiIsImNvbGxlY3Rpb24iLCJ1cGRhdGVPbmUiLCJuYW1lIiwiJHNldCIsInRyYW5zY3JpcHRpb25TdGF0dXMiLCJ0cmFuc2NyaXB0aW9uIiwic3VjY2VzcyIsIm1lc3NhZ2UiLCJjb25zb2xlIiwiZGV0YWlscyIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/transcribe.ts\n");

/***/ }),

/***/ "(api)/./utils/database.ts":
/*!***************************!*\
  !*** ./utils/database.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ connectToDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n}\nlet cached = global;\nif (!cached.mongo) {\n    cached.mongo = {\n        conn: null,\n        promise: null\n    };\n}\nasync function connectToDatabase() {\n    if (cached.mongo.conn) {\n        return cached.mongo.conn;\n    }\n    if (!cached.mongo.promise) {\n        const opts = {\n            useNewUrlParser: true,\n            useUnifiedTopology: true\n        };\n        cached.mongo.promise = mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient.connect(MONGODB_URI, opts).then((client)=>{\n            console.log(\"New database connection established\");\n            return {\n                client,\n                db: client.db()\n            };\n        }).catch((error)=>{\n            console.error(\"Failed to connect to database:\", error);\n            throw error;\n        });\n    }\n    try {\n        cached.mongo.conn = await cached.mongo.promise;\n    } catch (e) {\n        cached.mongo.promise = null;\n        throw e;\n    }\n    return cached.mongo.conn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi91dGlscy9kYXRhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0M7QUFFdEMsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDRixXQUFXO0FBRTNDLElBQUksQ0FBQ0EsYUFBYTtJQUNoQixNQUFNLElBQUlHLE1BQU07QUFDbEI7QUFFQSxJQUFJQyxTQUFTQztBQUViLElBQUksQ0FBQ0QsT0FBT0UsS0FBSyxFQUFFO0lBQ2pCRixPQUFPRSxLQUFLLEdBQUc7UUFBRUMsTUFBTTtRQUFNQyxTQUFTO0lBQUs7QUFDN0M7QUFFTyxlQUFlQztJQUNwQixJQUFJTCxPQUFPRSxLQUFLLENBQUNDLElBQUksRUFBRTtRQUNyQixPQUFPSCxPQUFPRSxLQUFLLENBQUNDLElBQUk7SUFDMUI7SUFFQSxJQUFJLENBQUNILE9BQU9FLEtBQUssQ0FBQ0UsT0FBTyxFQUFFO1FBQ3pCLE1BQU1FLE9BQU87WUFDWEMsaUJBQWlCO1lBQ2pCQyxvQkFBb0I7UUFDdEI7UUFFQVIsT0FBT0UsS0FBSyxDQUFDRSxPQUFPLEdBQUdULGdEQUFXQSxDQUFDYyxPQUFPLENBQUNiLGFBQWNVLE1BQU1JLElBQUksQ0FBQyxDQUFDQztZQUNuRUMsUUFBUUMsR0FBRyxDQUFDO1lBQ1osT0FBTztnQkFDTEY7Z0JBQ0FHLElBQUlILE9BQU9HLEVBQUU7WUFDZjtRQUNGLEdBQUdDLEtBQUssQ0FBQyxDQUFDQztZQUNSSixRQUFRSSxLQUFLLENBQUMsa0NBQWtDQTtZQUNoRCxNQUFNQTtRQUNSO0lBQ0Y7SUFFQSxJQUFJO1FBQ0ZoQixPQUFPRSxLQUFLLENBQUNDLElBQUksR0FBRyxNQUFNSCxPQUFPRSxLQUFLLENBQUNFLE9BQU87SUFDaEQsRUFBRSxPQUFPYSxHQUFHO1FBQ1ZqQixPQUFPRSxLQUFLLENBQUNFLE9BQU8sR0FBRztRQUN2QixNQUFNYTtJQUNSO0lBRUEsT0FBT2pCLE9BQU9FLEtBQUssQ0FBQ0MsSUFBSTtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpZGVvLWFuYWx5c2lzLXN5c3RlbS8uL3V0aWxzL2RhdGFiYXNlLnRzPzZhZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9uZ29DbGllbnQgfSBmcm9tICdtb25nb2RiJztcblxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcblxuaWYgKCFNT05HT0RCX1VSSSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ1BsZWFzZSBkZWZpbmUgdGhlIE1PTkdPREJfVVJJIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsJyk7XG59XG5cbmxldCBjYWNoZWQgPSBnbG9iYWwgYXMgYW55O1xuXG5pZiAoIWNhY2hlZC5tb25nbykge1xuICBjYWNoZWQubW9uZ28gPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNvbm5lY3RUb0RhdGFiYXNlKCkge1xuICBpZiAoY2FjaGVkLm1vbmdvLmNvbm4pIHtcbiAgICByZXR1cm4gY2FjaGVkLm1vbmdvLmNvbm47XG4gIH1cblxuICBpZiAoIWNhY2hlZC5tb25nby5wcm9taXNlKSB7XG4gICAgY29uc3Qgb3B0cyA9IHtcbiAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICAgIHVzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZSxcbiAgICB9O1xuXG4gICAgY2FjaGVkLm1vbmdvLnByb21pc2UgPSBNb25nb0NsaWVudC5jb25uZWN0KE1PTkdPREJfVVJJISwgb3B0cykudGhlbigoY2xpZW50KSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnTmV3IGRhdGFiYXNlIGNvbm5lY3Rpb24gZXN0YWJsaXNoZWQnKTtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGNsaWVudCxcbiAgICAgICAgZGI6IGNsaWVudC5kYigpLFxuICAgICAgfTtcbiAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBjb25uZWN0IHRvIGRhdGFiYXNlOicsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH0pO1xuICB9XG5cbiAgdHJ5IHtcbiAgICBjYWNoZWQubW9uZ28uY29ubiA9IGF3YWl0IGNhY2hlZC5tb25nby5wcm9taXNlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY2FjaGVkLm1vbmdvLnByb21pc2UgPSBudWxsO1xuICAgIHRocm93IGU7XG4gIH1cblxuICByZXR1cm4gY2FjaGVkLm1vbmdvLmNvbm47XG59XG4iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsIm1vbmdvIiwiY29ubiIsInByb21pc2UiLCJjb25uZWN0VG9EYXRhYmFzZSIsIm9wdHMiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VVbmlmaWVkVG9wb2xvZ3kiLCJjb25uZWN0IiwidGhlbiIsImNsaWVudCIsImNvbnNvbGUiLCJsb2ciLCJkYiIsImNhdGNoIiwiZXJyb3IiLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./utils/database.ts\n");

/***/ }),

/***/ "(api)/./utils/videoProcessor.ts":
/*!*********************************!*\
  !*** ./utils/videoProcessor.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkFFmpeg: () => (/* binding */ checkFFmpeg),\n/* harmony export */   cleanText: () => (/* binding */ cleanText),\n/* harmony export */   convertSpeechToText: () => (/* binding */ convertSpeechToText),\n/* harmony export */   extractAudio: () => (/* binding */ extractAudio),\n/* harmony export */   getAudioDuration: () => (/* binding */ getAudioDuration),\n/* harmony export */   getAudioFileUrl: () => (/* binding */ getAudioFileUrl),\n/* harmony export */   getFFmpegVersion: () => (/* binding */ getFFmpegVersion),\n/* harmony export */   processVideo: () => (/* binding */ processVideo)\n/* harmony export */ });\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! fluent-ffmpeg */ \"fluent-ffmpeg\");\n/* harmony import */ var fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _ffmpeg_installer_ffmpeg__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ffmpeg-installer/ffmpeg */ \"@ffmpeg-installer/ffmpeg\");\n/* harmony import */ var _ffmpeg_installer_ffmpeg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_ffmpeg_installer_ffmpeg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _ffprobe_installer_ffprobe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ffprobe-installer/ffprobe */ \"@ffprobe-installer/ffprobe\");\n/* harmony import */ var _ffprobe_installer_ffprobe__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_ffprobe_installer_ffprobe__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! util */ \"util\");\n/* harmony import */ var util__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(util__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _database__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./database */ \"(api)/./utils/database.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_3__]);\nopenai__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n\n\n\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_3__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY,\n    baseURL: \"https://api.openai-hub.com/v1\"\n});\nconst mongoUri = process.env.MONGODB_URI;\nif (!mongoUri) {\n    console.error(\"MONGODB_URI is not defined in the environment variables\");\n    process.exit(1);\n}\nconsole.log(\"MongoDB URI:\", mongoUri);\nlet mongoClient = null;\nasync function getMongoClient() {\n    if (!mongoUri) {\n        throw new Error(\"MONGODB_URI is not defined\");\n    }\n    if (!mongoClient) {\n        try {\n            mongoClient = new mongodb__WEBPACK_IMPORTED_MODULE_4__.MongoClient(mongoUri);\n            await mongoClient.connect();\n            console.log(\"Connected successfully to MongoDB\");\n        } catch (error) {\n            console.error(\"Failed to connect to MongoDB:\", error);\n            throw error;\n        }\n    }\n    return mongoClient;\n}\nfunction runCommand(command) {\n    return new Promise((resolve, reject)=>{\n        (0,child_process__WEBPACK_IMPORTED_MODULE_0__.exec)(command, {\n            encoding: \"utf8\"\n        }, (error, stdout, stderr)=>{\n            if (error) {\n                console.error(`Error executing command: ${command}`);\n                console.error(`Error: ${error}`);\n                console.error(`stderr: ${stderr}`);\n                reject(error);\n            } else {\n                resolve(stdout);\n            }\n        });\n    });\n}\nasync function processVideo(filePath) {\n    try {\n        // 1. 音频分离\n        const audioFile = await extractAudio(filePath);\n        // 2. 音频转文本\n        const textContent = await convertSpeechToText(audioFile);\n        // 3. 文本清洗\n        const cleanedText = await cleanText(textContent);\n        // 4. 文本存储\n        await storeText([\n            cleanedText\n        ]);\n        // 5. 高级分析\n        const analysisResult = await performAdvancedAnalysis([\n            cleanedText\n        ]);\n        return analysisResult;\n    } catch (error) {\n        console.error(\"Error in video processing:\", error);\n        throw error;\n    }\n}\nfunction extractAudio(videoPath) {\n    return new Promise((resolve, reject)=>{\n        const outputDir = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"audio\");\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(outputDir)) {\n            fs__WEBPACK_IMPORTED_MODULE_1___default().mkdirSync(outputDir, {\n                recursive: true\n            });\n        }\n        const outputPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(outputDir, `${path__WEBPACK_IMPORTED_MODULE_2___default().basename(videoPath, \".mp4\")}.mp3`);\n        console.log(\"Input video path:\", videoPath);\n        console.log(\"Output audio path:\", outputPath);\n        fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default()(videoPath).outputOptions(\"-vn\").audioCodec(\"libmp3lame\").audioChannels(2).audioBitrate(\"192k\").output(outputPath).on(\"end\", async ()=>{\n            console.log(\"Audio extraction completed:\", outputPath);\n            try {\n                const { db } = await (0,_database__WEBPACK_IMPORTED_MODULE_9__.connectToDatabase)();\n                const collection = db.collection(\"audio_files\");\n                const duration = await getAudioDuration(outputPath);\n                await collection.insertOne({\n                    name: path__WEBPACK_IMPORTED_MODULE_2___default().basename(outputPath),\n                    size: fs__WEBPACK_IMPORTED_MODULE_1___default().statSync(outputPath).size,\n                    createdAt: new Date(),\n                    path: outputPath,\n                    originalVideo: path__WEBPACK_IMPORTED_MODULE_2___default().basename(videoPath),\n                    duration: duration,\n                    transcriptionStatus: \"not_transcribed\"\n                });\n                resolve(outputPath);\n            } catch (error) {\n                console.error(\"Error saving audio file info to database:\", error);\n                reject(error);\n            }\n        }).on(\"error\", (err)=>{\n            console.error(\"Error during audio extraction:\", err);\n            reject(err);\n        }).run();\n    });\n}\nasync function convertSpeechToText(audioFile) {\n    try {\n        const audioPath = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"audio\", audioFile);\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(audioPath)) {\n            throw new Error(`Audio file not found: ${audioPath}`);\n        }\n        const response = await openai.audio.transcriptions.create({\n            file: fs__WEBPACK_IMPORTED_MODULE_1___default().createReadStream(audioPath),\n            model: \"whisper-1\"\n        });\n        const transcription = response.text;\n        // 保存转录文本为 txt 文件\n        const txtFilePath = audioPath.replace(\".mp3\", \".txt\");\n        await fs__WEBPACK_IMPORTED_MODULE_1__.promises.writeFile(txtFilePath, transcription, \"utf-8\");\n        console.log(\"Transcription saved to:\", txtFilePath);\n        return transcription;\n    } catch (error) {\n        console.error(\"Error in speech to text conversion:\", error);\n        throw error;\n    }\n}\nasync function cleanText(text) {\n    // 这里可以实现文本清洗的逻辑\n    // 例如：移除特殊字符，纠正常见错误等\n    let cleanedText = text.replace(/[^\\w\\s.,?!]/g, \"\");\n    cleanedText = cleanedText.replace(/\\s+/g, \" \").trim();\n    return cleanedText;\n}\nasync function storeText(texts) {\n    const client = await getMongoClient();\n    try {\n        const db = client.db(\"video_analysis\");\n        const collection = db.collection(\"transcripts\");\n        await collection.insertMany(texts.map((text)=>({\n                content: text\n            })));\n        console.log(\"Texts stored successfully in MongoDB\");\n    } catch (error) {\n        console.error(\"Error storing texts in MongoDB:\", error);\n        throw error;\n    }\n}\nasync function performAdvancedAnalysis(texts) {\n    return {\n        analysis: \"Sample analysis result\"\n    };\n}\nasync function getAudioDuration(filePath) {\n    return new Promise((resolve, reject)=>{\n        fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().ffprobe(filePath, (err, metadata)=>{\n            if (err) {\n                reject(err);\n                return;\n            }\n            const durationInSeconds = metadata.format.duration;\n            resolve(durationInSeconds);\n        });\n    });\n}\nasync function checkFFmpeg() {\n    try {\n        const getAvailableFormats = (0,util__WEBPACK_IMPORTED_MODULE_8__.promisify)((fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().getAvailableFormats));\n        await getAvailableFormats();\n        console.log(\"FFmpeg is available\");\n        return true;\n    } catch (error) {\n        console.error(\"Error checking FFmpeg:\", error);\n        return false;\n    }\n}\nasync function getFFmpegVersion() {\n    try {\n        const getAvailableCodecs = (0,util__WEBPACK_IMPORTED_MODULE_8__.promisify)((fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().getAvailableCodecs));\n        const getAvailableEncoders = (0,util__WEBPACK_IMPORTED_MODULE_8__.promisify)((fluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().getAvailableEncoders));\n        const codecs = await getAvailableCodecs();\n        const encoders = await getAvailableEncoders();\n        return `FFmpeg version: available (codecs: ${Object.keys(codecs).length}, encoders: ${Object.keys(encoders).length})`;\n    } catch (error) {\n        console.error(\"Error getting FFmpeg version:\", error);\n        return \"FFmpeg version: unavailable\";\n    }\n}\nfluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().setFfmpegPath((_ffmpeg_installer_ffmpeg__WEBPACK_IMPORTED_MODULE_6___default().path));\nfluent_ffmpeg__WEBPACK_IMPORTED_MODULE_5___default().setFfprobePath((_ffprobe_installer_ffprobe__WEBPACK_IMPORTED_MODULE_7___default().path));\nasync function getAudioFileUrl(filename) {\n    // 检查多个可能的路径\n    const possiblePaths = [\n        path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"download\", \"mp3\", filename),\n        path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"audio\", filename),\n        path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"public\", \"uploads\", filename)\n    ];\n    for (const filePath of possiblePaths){\n        console.log(\"Checking for audio file at:\", filePath);\n        if (fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(filePath)) {\n            console.log(\"Audio file found at:\", filePath);\n            // 返回相对于公共目录的路径\n            return `/audio/${encodeURIComponent(filename)}`;\n        }\n    }\n    console.error(\"Audio file not found:\", filename);\n    console.error(\"Checked paths:\", possiblePaths);\n    throw new Error(`Audio file not found: ${filename}`);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/videoProcessor.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/transcribe.ts"));
module.exports = __webpack_exports__;

})();